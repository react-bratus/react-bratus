{"version":3,"sources":["locales lazy /^/.//.*//messages/.js$/ groupOptions: {} namespace object","contexts/HighlightedComponentsContext.js","contexts/ComponentBackgroundContext.js","utils/constants/units.js","utils/functions/rgbaToHex.js","components/ComponentNode/ComponentNode.sc.js","components/ComponentNode/ComponentNode.jsx","components/ComponentTree/ComponentTree.sc.js","utils/constants/constants.js","utils/functions/graphUtils.js","components/ComponentTree/private/LayoutButtons.jsx","components/ComponentTree/ComponentTree.jsx","hooks/useStickyState.js","components/ComponentDetails/ComponentDetails.sc.js","components/ComponentDetails/ComponentDetails.jsx","components/HelpPanel/private/EdgesSection.tsx","components/HelpPanel/HelpPanel.sc.js","components/HelpPanel/private/LinksSection.tsx","components/HelpPanel/private/NodesSection.tsx","components/HelpPanel/private/PreferencesSection.tsx","components/HelpPanel/HelpPanel.tsx","components/Minimap/MiniMapNode.tsx","components/Minimap/MiniMap.tsx","components/Minimap/Minimap.sc.js","components/NavigationPanel/NavigationPanel.sc.js","components/NavigationPanel/private/ActionButtons/ActionButtons.sc.js","components/NavigationPanel/private/ActionButtons/NavigationPrimaryActions.jsx","api/index.js","components/NavigationPanel/private/ActionButtons/NavigationGitHubActions.jsx","components/NavigationPanel/private/SubMenuSections/NavSearchComponent.jsx","components/NavigationPanel/private/SubMenuSections/NavNodeVisualizationOptions.jsx","components/NavigationPanel/NavigationPanel.jsx","components/DefaultLayoutPage/DefaultLayout.sc.js","components/DefaultLayoutPage/DefaultLayout.jsx","utils/functions/locale.js","hooks/useLocale.js","providers/HighlightedComponentsProvider.js","providers/I18nWatchLocaleProvider.js","providers/ThemeProvider.js","App.js","utils/functions/nodes-and-edges.js","providers/ComponentBackgroundProvider.js","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","HighlightedComponentsContext","createContext","highlightedComponents","ComponentBackgroundContext","mode","locReference","baseUnit","nodeWidth","baseNodeHeight","trim","str","replace","StyledNode","styled","div","linesOfCode","componentBackground","treeLayoutDirection","isHighlighted","bgColor","fontColor","StyledTitle","Title","color","StyledNodeContent","Col","antDesignIconStyles","Row","Text","css","LockOutlined","UnlockOutlined","EyeOutlined","ComponentNode","node","nodeName","nameLength","useContext","GraphDirectionContext","getBgColor","ColorHash","lightness","hue","min","max","hex","data","label","rgba","inParts","substring","indexOf","split","r","parseInt","g","b","a","parseFloat","length","toFixed","outParts","toString","Math","round","forEach","part","i","join","rgbaToHex","getFontColor","charAt","layoutTargetHandlePosition","layoutSourceHandlePosition","truncatedNodeName","slice","concat","some","component","match","componentName","onDoubleClick","onShowNodeDetail","inDegree","type","position","level","outDegree","LayoutButtonsWrapper","StyledFontAwesomeIcon","FontAwesomeIcon","LayoutButton","Button","ZoomControlButtons","Controls","GraphLabels","defaultOpenKeys","HelpPanelLabels","title","text","size","header","img","white","default","conditional","router","help","tree","repo","repoUrl","changeLog","changelogUrl","demo","demoUrl","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","getLayoutedGraphElements","nodesAndEdges","setTreeLayoutDirection","setGraph","rankdir","isHorizontalLayout","graphElement","isNode","setNode","width","height","isEdge","setEdge","source","target","layout","nodeWithPosition","targetPosition","sourcePosition","x","random","y","LayoutButtons","layoutedNodesAndEdges","setLayoutedNodesAndEdges","reactFlowInstance","useZoomPanHelper","onChangeTreeLayout","useCallback","els","shape","onClick","fitView","icon","faGripHorizontal","faGripVertical","React","ComponentTree","useState","setHighlightedComponents","Provider","value","onLoad","elements","nodeTypes","reactComponent","onNodeMouseEnter","_e","filter","_node","locked","search","highlightComponent","onNodeMouseLeave","index","findIndex","array","splice","removeHighlight","onPaneClick","panOnScroll","minZoom","defaultZoom","useStickyState","defaultValue","key","stickyValue","window","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","ComponentDetailsRow","ComponentDetails","nodeDetail","visible","LoadingOutlined","spin","timeUsed","timesUsed","copyable","href","path","style","vscDarkPlus","showLineNumbers","language","Panel","Collapse","EdgesSection","defaultActiveKey","src","Link","Typography","VerticalDivider","Divider","CheckboxWrapper","StyledLink","StyledLi","li","StyledUl","ul","LinksSection","GithubOutlined","ReadOutlined","YoutubeOutlined","NodesSection","PreferencesSection","isHelpHiddenOnStartUp","setIsHelpHiddenOnStartUp","isVerticalTreeLayoutAsDefault","setVerticalTreeLayoutAsDefault","checked","onChange","HelpPanel","isHelpVisible","setIsHelpVisible","onClose","bodyStyle","paddingBottom","MiniMapNode","strokeColor","strokeWidth","className","borderRadius","shapeRendering","background","backgroundColor","fill","String","cc","rx","ry","stroke","displayName","rectToBox","x2","y2","getBoundsofRects","rect1","rect2","boxToRect","box1","box2","useGesture","createUseGesture","dragAction","wheelAction","MiniMap","nodeStrokeColor","nodeColor","nodeClassName","nodeBorderRadius","nodeStrokeWidth","maskColor","containerWidth","useStoreState","s","containerHeight","transform","tX","tY","tScale","nodes","mapClasses","elementWidth","Number","elementHeight","nodeColorFunc","Function","nodeStrokeColorFunc","nodeClassNameFunc","hasNodes","bb","getRectOfNodes","viewBB","boundingRect","scaledWidth","scaledHeight","viewScale","viewWidth","viewHeight","offset","maxZoom","rectRef","useRef","onDrag","delta","zoom","onWheel","event","clientX","clientY","deltaY","active","sign","current","getBoundingClientRect","bind","viewBox","isHidden","__rf","ref","fillRule","touchAction","StyledMiniMap","NavigationSider","Sider","AppTitle","StyledSubMenu","SubMenu","navigationDropdownStyles","DropdownInput","Select","BaselineInputWrapper","TreeComponentDropdown","TreeSelect","StyledDropDownSelect","maxHeight","maxWidth","minWidth","overflow","StyledMenuDivider","MenuDivider","navigationButtonsWrapperStyles","PrimaryActionsWrapper","GitHubActionsWrapper","ActionButton","NavigationPrimaryActions","ReloadOutlined","fetch","method","hide","message","loading","setTimeout","location","reload","catch","error","console","log","QuestionCircleOutlined","NavigationGitHubActions","ghost","NavSearchComponent","setCenter","store","searchField","setSearchField","searchOptions","setSearchOptions","getParentId","idSplit","pop","isLeaf","pId","showSearch","dropdownStyle","placeholder","arr","focusNode","treeDataSimpleMode","treeDefaultExpandAll","treeData","NavNodeVisualizationOptions","setComponentBackground","Option","addonBefore","NavigationPanel","collapsed","collapsedWidth","theme","FileSearchOutlined","BgColorsOutlined","InteractionOutlined","MainContentWrapper","Layout","NavigationTriggerButton","navigationWidth","MinimapTriggerButton","isMinimapVisible","DefaultLayout","children","info","setNodeDetail","setCollapsed","setisMinimapVisible","LeftCircleOutlined","rotate","closable","keyboard","isMinimapNodeHighlighted","locale","messages","i18n","load","activate","LOCAL_STORAGE_KEY","useLocale","langPrimaryCode","navigator","languages","userLanguage","getUserLocale","setLocale","updateLocale","HighlightedComponentsProvider","loadLocaleData","plurals","en","da","I18nWatchLocaleProvider","useLingui","propTypes","PropTypes","any","THEME","primary","secondary","GlobalStyle","createGlobalStyle","ThemeProvider","App","setNodesAndEdges","setInfo","undefined","treeLayoutOnCompile","res","json","getNodes","edges","edge","labelBgPadding","labelBgBorderRadius","labelBgStyle","fillOpacity","labelStyle","getEdges","spinning","description","ComponentBackgroundProvider","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63b3ddc5.chunk.js","sourcesContent":["var map = {\n\t\"./da/messages.js\": [\n\t\t921,\n\t\t3\n\t],\n\t\"./en/messages.js\": [\n\t\t922,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 919;\nmodule.exports = webpackAsyncContext;","import { createContext } from 'react';\n\nconst HighlightedComponentsContext = createContext({\n  highlightedComponents: [],\n});\n\nexport default HighlightedComponentsContext;\n","import { createContext } from 'react';\n\nconst ComponentBackgroundContext = createContext({\n  mode: 'white',\n  locReference: 300,\n});\n\nexport default ComponentBackgroundContext;\n","export const baseUnit = 12;\nexport const navigationWidth = 350;\nexport const borderRadius = 8;\nexport const nodeWidth = 180;\nexport const baseNodeHeight = 100;\nexport const nodeNameLength = 13;\n","// Source: https://gist.github.com/whitlockjc/9363016\nexport const rgbaToHex = (rgba) => {\n  var inParts = rgba.substring(rgba.indexOf('(')).split(','),\n    r = parseInt(trim(inParts[0].substring(1)), 10),\n    g = parseInt(trim(inParts[1]), 10),\n    b = parseInt(trim(inParts[2]), 10),\n    a = parseFloat(\n      trim(inParts[3].substring(0, inParts[3].length - 1))\n    ).toFixed(2);\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ];\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part;\n    }\n  });\n\n  return '#' + outParts.join('');\n};\nconst trim = (str) => {\n  return str.replace(/^\\s+|\\s+$/gm, '');\n};\n","import { EyeOutlined, LockOutlined, UnlockOutlined } from '@ant-design/icons';\nimport { Col, Row } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport Title from 'antd/lib/typography/Title';\nimport styled, { css } from 'styled-components';\n\nimport {\n  baseNodeHeight,\n  baseUnit,\n  nodeWidth,\n} from '../../utils/constants/units';\nconst horizontalViewNodeHeight = baseNodeHeight / 2.3;\n\nexport const StyledNode = styled.div`\n  height: ${({ linesOfCode, componentBackground, treeLayoutDirection }) => {\n    if (componentBackground.mode === 'proportional_size') {\n      if (treeLayoutDirection === 'TB') {\n        return `${horizontalViewNodeHeight + linesOfCode}px`;\n      }\n    }\n    return '75px';\n  }};\n  width: ${({ linesOfCode, componentBackground, treeLayoutDirection }) => {\n    if (componentBackground.mode === 'proportional_size') {\n      if (treeLayoutDirection === 'LR') {\n        return `${nodeWidth + linesOfCode}px`;\n      }\n    }\n    return `${nodeWidth}px`;\n  }};\n  padding: ${baseUnit}px;\n  border-radius: 100px;\n  border: ${({ isHighlighted }) => {\n    return isHighlighted ? '1.5px solid black' : '1px solid black';\n  }};\n  background-color: ${({ bgColor }) => bgColor};\n  color: ${({ fontColor }) => fontColor};\n  position: relative;\n`;\n\nexport const StyledTitle = styled(Title)`\n  color: ${({ color }) => color};\n  font-weight: 600;\n  font-size: 17px;\n  line-height: 1.7px;\n  margin-bottom: 5px;\n`;\n\nexport const StyledNodeContent = styled(Col)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const NodeContentRow = styled(Row)`\n  flex-grow: 1;\n  padding-bottom: 12px;\n  justify-content: center;\n`;\n\nexport const NodeButtonsRow = styled(Row)`\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const TimeUsedText = styled(Text)`\n  font-size: 18px;\n  line-height: 18px;\n  color: ${({ color }) => color};\n`;\n\nconst antDesignIconStyles = css`\n  font-size: 24px;\n`;\n\nexport const LockIcon = styled(LockOutlined)`\n  ${antDesignIconStyles}\n`;\n\nexport const UnlockIcon = styled(UnlockOutlined)`\n  ${antDesignIconStyles}\n`;\n\nexport const EyeIcon = styled(EyeOutlined)`\n  ${antDesignIconStyles}\n`;\n","import ColorHash from 'color-hash';\nimport React, { useContext } from 'react';\nimport { Handle } from 'react-flow-renderer';\nimport ComponentBackgroundContext from '../../contexts/ComponentBackgroundContext';\nimport HighlightedComponentsContext from '../../contexts/HighlightedComponentsContext';\nimport { nodeNameLength } from '../../utils/constants/units';\nimport { rgbaToHex } from '../../utils/functions/rgbaToHex';\nimport { GraphDirectionContext } from '../ComponentTree/ComponentTree';\nimport { StyledNode, StyledNodeContent, StyledTitle } from './ComponentNode.sc';\n\nconst ComponentNode = (node) => {\n  const { highlightedComponents } = useContext(HighlightedComponentsContext);\n  // const nodes = useStoreState((store) => store.nodes);\n\n  const { componentBackground } = useContext(ComponentBackgroundContext);\n\n  // const setSelectedElements = useStoreActions(\n  //   (actions) => actions.setSelectedElements\n  // );\n\n  const treeLayoutDirection = useContext(GraphDirectionContext);\n\n  // const lockComponent = () => {\n  //   const index = highlightedComponents.findIndex(\n  //     (component) => component.id === node.id\n  //   );\n\n  //   const array = [...highlightedComponents];\n  //   if (index !== -1 && highlightedComponents[index].locked) {\n  //     array.splice(index, 1);\n  //     setHighlightedComponents(array);\n  //   } else if (index !== -1) {\n  //     array.splice(index, 1);\n  //     setHighlightedComponents([\n  //       ...array,\n  //       {\n  //         id: node.id,\n  //         componentName: node.data.label,\n  //         locked: true,\n  //         search: false,\n  //       },\n  //     ]);\n  //     setSelectedElements(nodes.filter((_node) => _node.id.includes(node.id)));\n  //   }\n  // };\n\n  const isHighlighted = () => {\n    return highlightedComponents.some((component) =>\n      node.id.match(\n        `${component.componentName}:+.+|${component.componentName}$`\n      )\n    );\n  };\n\n  // const isLocked = () => {\n  //   return highlightedComponents.some(\n  //     (component) =>\n  //       component.locked &&\n  //       node.id.match(\n  //         `${component.componentName}:+.+|${component.componentName}$`\n  //       )\n  //   );\n  // };\n\n  const getBgColor = () => {\n    if (componentBackground.mode === 'proportional_size') {\n      const hex = new ColorHash({\n        lightness: 0.8,\n        hue: { min: 0, max: 366 },\n      }).hex(node.data.label);\n      return hex;\n    } else if (componentBackground.mode === 'loc_reference') {\n      return rgbaToHex(\n        `rgba(255,140,0,${\n          node.data.linesOfCode / componentBackground.locReference > 1\n            ? 1\n            : node.data.linesOfCode / componentBackground.locReference\n        })`\n      );\n    } else {\n      return '#FFFFFFFF';\n    }\n  };\n\n  const getFontColor = () => {\n    const bgColor = getBgColor();\n    const color =\n      bgColor.charAt(0) === '#'\n        ? bgColor.substring(bgColor.length === 9 ? 2 : 1, 7)\n        : bgColor;\n    const r = parseInt(color.substring(0, 2), 16); // hexToR\n    const g = parseInt(color.substring(2, 4), 16); // hexToG\n    const b = parseInt(color.substring(4, 6), 16); // hexToB\n    return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? '#000' : '#fff';\n  };\n\n  const layoutTargetHandlePosition =\n    treeLayoutDirection === 'LR' ? 'left' : 'top';\n  const layoutSourceHandlePosition =\n    treeLayoutDirection === 'LR' ? 'right' : 'bottom';\n\n  const truncateNodeName = (nodeName, nameLength) => {\n    return nodeName.length > nameLength\n      ? nodeName.slice(0, nameLength - 1).concat('...')\n      : nodeName;\n  };\n\n  const truncatedNodeName = truncateNodeName(node.data.label, nodeNameLength);\n\n  return (\n    <StyledNode\n      linesOfCode={node.data.linesOfCode}\n      componentBackground={componentBackground}\n      treeLayoutDirection={treeLayoutDirection}\n      isHighlighted={isHighlighted()}\n      bgColor={getBgColor}\n      fontColor={getFontColor()}\n      onDoubleClick={() => node.data.onShowNodeDetail(node)}\n    >\n      {node.data.inDegree > 0 && (\n        <Handle type=\"target\" position={layoutTargetHandlePosition} />\n      )}\n\n      <StyledNodeContent>\n        <StyledTitle color={getFontColor} level={5}>\n          {truncatedNodeName}\n        </StyledTitle>\n      </StyledNodeContent>\n\n      {node.data.outDegree > 0 && (\n        <Handle type=\"source\" position={layoutSourceHandlePosition} />\n      )}\n    </StyledNode>\n  );\n};\n\nexport default ComponentNode;\n","import styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from 'antd';\nimport { Controls } from 'react-flow-renderer';\n\nexport const LayoutButtonsWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nexport const StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  margin-left: 7px;\n`;\n\nexport const LayoutButton = styled(Button)`\n  &:active {\n    transform: translateY(4px);\n  }\n`;\n\nexport const ZoomControlButtons = styled(Controls)`\n  bottom: 70px;\n`;\n","export const GraphLabels = {\n  leftToRight: 'LR',\n  topToBottom: 'TB',\n};\n\nexport const defaultOpenKeys = [\n  'search-component',\n  'node-visualization',\n  'navigation-actions',\n];\n\nexport const HelpPanelLabels = {\n  title: 'Legend',\n  thanks: 'Thank you for installing react-bratus',\n  purpose: 'Hopefully this tool can help you navigate your React.js code base.',\n  nodes: {\n    title: 'Node visualization options',\n    text: 'Each node in the visualization represents a user-defined React component. React-Bratus provides three different ways of visualizing the nodes:',\n    size: {\n      header: 'Proportional Size based on Lines of Code',\n      text: 'Depending on the layout of the tree the height or width of each node is proportional to the lines of code in that component.',\n      img: './images/proportional_size.png',\n    },\n    color: {\n      header: 'Colorization based on Lines of Code',\n      text: ' Depending on the lines of code of a component, its color gets lighter or darker. React-Bratus uses DarkOrange(255,140,0) to achieve this scaling.',\n      img: './images/lines_colorization.png',\n    },\n    white: {\n      header: 'White',\n      text: 'White provides a simple overview of your component hierarchy, without any visualization filters applied on it.',\n      img: './images/white.png',\n    },\n  },\n  edges: {\n    title: 'Edge types',\n    text: 'Each edge in the visualization indicates a ”renders” relationship where the source node renders the target node. There are three types of those relationships:',\n    default: {\n      header: 'Components rendered by default',\n      text: 'Black edges denote that these comoponents are always rendered by their parent.',\n      img: './images/default.png',\n    },\n    conditional: {\n      header: 'Conditionally rendered components',\n      text: 'Conditionally rendered based on Javascript control flow (orange-dashed lines) indicate a component rendered within conditional statements. In the label, you can see the conditional type (ternary, &&, if) and the condition that needs to be satisfied for the component to be rendered.',\n      img: './images/conditional.png',\n    },\n    router: {\n      header: 'Components rendered by React-Router',\n      text: 'Conditionally rendered by the react-router-dom rendered component given a specific path, represented as the label on the edge',\n      img: './images/router.png',\n    },\n  },\n  pref: {\n    title: 'Preferences',\n    help: 'Hide Help on Start Up',\n    tree: 'Set vertical layout as default',\n  },\n  links: {\n    title: 'Useful Links',\n    repo: 'Github repo',\n    repoUrl: 'https://github.com/react-bratus/react-bratus',\n    changeLog: 'Changelog',\n    changelogUrl: 'https://github.com/react-bratus/react-bratus#changelog',\n    demo: 'v2.0.7 Demo',\n    demoUrl: 'https://www.youtube.com/watch?v=GBzsOTrZ304',\n  },\n};\n","import dagre from 'dagre';\nimport { isEdge, isNode } from 'react-flow-renderer';\nimport { GraphLabels } from '../constants/constants';\nimport { baseNodeHeight, nodeWidth } from '../constants/units';\n\nvar aditionalSpaceMultiplier = 2;\n\nconst dagreGraph = new dagre.graphlib.Graph();\n\ndagreGraph.setDefaultEdgeLabel(() => ({}));\n\n/**\n * @param {*} nodesAndEdges the nodes and edges of the tree.\n * @param {*} treeLayoutDirection The layout direction of the tree. Read more here: https://g6.antv.vision/en/docs/api/graphLayout/dagre. It is set to a value, as this is the way JS understands optional params.\n * @param {*} setTreeLayoutDirection Setting the direction state, to use it for handles positioning\n * @function setDefaultEdgeLabel Default to assigning a new object as a label for each new edge.\n * @function setGraph Sets an object for the graph label\n * @function el.position Stephan: Unfortunately we need this little hack to pass a slighltiy different position to notify react flow about the change. More over we are shifting the dagre node position (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\n * @returns the node elements.\n */\nexport const getLayoutedGraphElements = (\n  nodesAndEdges,\n  treeLayoutDirection = 'TB',\n  setTreeLayoutDirection = () => {},\n  componentBackground\n) => {\n  dagreGraph.setGraph({ rankdir: treeLayoutDirection });\n\n  const isHorizontalLayout = treeLayoutDirection === 'LR';\n\n  nodesAndEdges.forEach((graphElement) => {\n    if (isNode(graphElement)) {\n      if (treeLayoutDirection === GraphLabels.topToBottom) {\n        if (componentBackground.mode === 'proportional_size') {\n          dagreGraph.setNode(graphElement.id, {\n            width: nodeWidth,\n            height:\n              baseNodeHeight * aditionalSpaceMultiplier +\n              graphElement.data.linesOfCode,\n          });\n        } else {\n          dagreGraph.setNode(graphElement.id, {\n            width: nodeWidth,\n            height: baseNodeHeight * 2.5,\n          });\n        }\n      }\n\n      if (treeLayoutDirection == GraphLabels.leftToRight) {\n        if (componentBackground.mode === 'proportional_size') {\n          dagreGraph.setNode(graphElement.id, {\n            width: nodeWidth * aditionalSpaceMultiplier,\n            height: baseNodeHeight + graphElement.data.linesOfCode,\n          });\n        }\n        dagreGraph.setNode(graphElement.id, {\n          width: nodeWidth * 2.5,\n          height: baseNodeHeight,\n        });\n      }\n    }\n\n    if (isEdge(graphElement)) {\n      dagreGraph.setEdge(graphElement.source, graphElement.target);\n    }\n  });\n\n  dagre.layout(dagreGraph);\n\n  setTreeLayoutDirection(treeLayoutDirection);\n\n  return nodesAndEdges.map((graphElement) => {\n    if (isNode(graphElement)) {\n      const nodeWithPosition = dagreGraph.node(graphElement.id);\n\n      graphElement.targetPosition = isHorizontalLayout ? 'left' : 'top';\n      graphElement.sourcePosition = isHorizontalLayout ? 'right' : 'bottom';\n\n      if (treeLayoutDirection === 'TB') {\n        if (componentBackground.mode === 'proportional_size') {\n          graphElement.position = {\n            x: nodeWithPosition.x - nodeWidth + Math.random() / 1000,\n            y: nodeWithPosition.y - (36 + graphElement.data.linesOfCode) / 3,\n          };\n        } else {\n          graphElement.position = {\n            x: nodeWithPosition.x - nodeWidth,\n            y: nodeWithPosition.y - baseNodeHeight,\n          };\n        }\n      }\n\n      if (treeLayoutDirection === 'LR') {\n        if (componentBackground.mode === 'proportional_size') {\n          graphElement.position = {\n            x:\n              nodeWithPosition.x -\n              (nodeWidth + graphElement.data.linesOfCode) / 3,\n            y: nodeWithPosition.y - baseNodeHeight + Math.random() / 1000,\n          };\n        } else {\n          graphElement.position = {\n            x:\n              nodeWithPosition.x -\n              (nodeWidth * aditionalSpaceMultiplier) / 2 +\n              Math.random() / 1000,\n            y: nodeWithPosition.y,\n          };\n        }\n      }\n    }\n\n    return graphElement;\n  });\n};\n","import {\n  faGripHorizontal,\n  faGripVertical,\n} from '@fortawesome/free-solid-svg-icons';\nimport React, { useCallback, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LayoutButton,\n  LayoutButtonsWrapper,\n  StyledFontAwesomeIcon,\n} from '../ComponentTree.sc';\nimport { getLayoutedGraphElements } from '../../../utils/functions/graphUtils';\nimport { useZoomPanHelper } from 'react-flow-renderer';\nimport ComponentBackgroundContext from '../../../contexts/ComponentBackgroundContext';\n\nexport const LayoutButtons = ({\n  layoutedNodesAndEdges,\n  setLayoutedNodesAndEdges,\n  setTreeLayoutDirection,\n}) => {\n  const reactFlowInstance = useZoomPanHelper();\n\n  const { componentBackground } = useContext(ComponentBackgroundContext);\n\n  const onChangeTreeLayout = useCallback(\n    (treeLayoutDirection) => {\n      const els = getLayoutedGraphElements(\n        layoutedNodesAndEdges,\n        treeLayoutDirection,\n        setTreeLayoutDirection,\n        componentBackground\n      );\n      setLayoutedNodesAndEdges(els);\n    },\n    [layoutedNodesAndEdges]\n  );\n\n  return (\n    <LayoutButtonsWrapper>\n      <LayoutButton\n        shape=\"round\"\n        type=\"primary\"\n        size=\"middle\"\n        onClick={async () => {\n          await onChangeTreeLayout('TB');\n          reactFlowInstance.fitView();\n        }}\n      >\n        Horizontal Layout\n        <StyledFontAwesomeIcon icon={faGripHorizontal} />\n      </LayoutButton>\n\n      <LayoutButton\n        shape=\"round\"\n        type=\"primary\"\n        size=\"middle\"\n        onClick={async () => {\n          await onChangeTreeLayout('LR');\n          reactFlowInstance.fitView();\n        }}\n      >\n        Vertical Layout\n        <StyledFontAwesomeIcon icon={faGripVertical} />\n      </LayoutButton>\n    </LayoutButtonsWrapper>\n  );\n};\n\nexport default LayoutButtons;\n\nLayoutButtons.propTypes = {\n  layoutedNodesAndEdges: PropTypes.any,\n  setLayoutedNodesAndEdges: PropTypes.any,\n  setTreeLayoutDirection: PropTypes.any,\n};\n","import ReactFlow from 'react-flow-renderer';\nimport PropTypes from 'prop-types';\nimport React, { useContext, useState } from 'react';\nimport HighlightedComponentsContext from '../../contexts/HighlightedComponentsContext';\nimport ComponentNode from '../ComponentNode/ComponentNode';\nimport LayoutButtons from './private/LayoutButtons';\nimport { ZoomControlButtons } from './ComponentTree.sc';\n\nexport const GraphDirectionContext = React.createContext(null);\n\nconst ComponentTree = ({\n  nodesAndEdges,\n  treeLayoutDirection,\n  setTreeLayoutDirection,\n}) => {\n  const [layoutedNodesAndEdges, setLayoutedNodesAndEdges] =\n    useState(nodesAndEdges);\n\n  const { highlightedComponents, setHighlightedComponents } = useContext(\n    HighlightedComponentsContext\n  );\n\n  const onLoadTree = (reactFlowInstance) => reactFlowInstance.fitView();\n\n  const highlightComponent = (node) => {\n    const componentName = node ? node.data.label : null;\n    setHighlightedComponents([\n      ...highlightedComponents.filter((_node) => _node.locked),\n      {\n        id: node.id,\n        componentName: componentName,\n        locked: false,\n        search: false,\n      },\n    ]);\n  };\n\n  const removeHighlight = (node) => {\n    const index = highlightedComponents.findIndex(\n      (component) => component.id === node.id\n    );\n    if (index !== -1) {\n      const highlightedComponent = highlightedComponents[index];\n      if (!highlightedComponent.locked) {\n        const array = [...highlightedComponents];\n        array.splice(index, 1);\n        setHighlightedComponents(array);\n      }\n    }\n  };\n\n  const resetHighlight = () => setHighlightedComponents([]);\n\n  return (\n    <>\n      {layoutedNodesAndEdges && (\n        <GraphDirectionContext.Provider value={treeLayoutDirection}>\n          <LayoutButtons\n            setTreeLayoutDirection={setTreeLayoutDirection}\n            layoutedNodesAndEdges={layoutedNodesAndEdges}\n            setLayoutedNodesAndEdges={setLayoutedNodesAndEdges}\n          />\n          <ReactFlow\n            onLoad={onLoadTree}\n            elements={layoutedNodesAndEdges}\n            nodeTypes={{ reactComponent: ComponentNode }}\n            onNodeMouseEnter={(_e, node) => highlightComponent(node, false)}\n            onNodeMouseLeave={(_e, node) => removeHighlight(node)}\n            onPaneClick={resetHighlight}\n            panOnScroll={true}\n            minZoom={0}\n            defaultZoom={0}\n          >\n            <ZoomControlButtons />\n          </ReactFlow>\n        </GraphDirectionContext.Provider>\n      )}\n    </>\n  );\n};\n\nComponentTree.propTypes = {\n  nodesAndEdges: PropTypes.any,\n  treeLayoutDirection: PropTypes.any,\n  setTreeLayoutDirection: PropTypes.any,\n};\n\nexport default ComponentTree;\n","import { useEffect, useState } from 'react';\n\nconst useStickyState = (defaultValue, key) => {\n  const [value, setValue] = useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n  });\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n};\n\nexport default useStickyState;\n","import { Row } from 'antd';\nimport styled from 'styled-components';\n\nexport const ComponentDetailsRow = styled(Row)`\n  pre {\n    width: 100%;\n  }\n`;\n","import { LoadingOutlined } from '@ant-design/icons';\nimport { Col, Divider } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport Title from 'antd/lib/typography/Title';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nimport { ComponentDetailsRow } from './ComponentDetails.sc';\n\nconst ComponentDetails = ({ nodeDetail }) => {\n  if (!nodeDetail.visible) {\n    return <LoadingOutlined spin />;\n  }\n\n  const timeUsed = nodeDetail.node.data.component.timesUsed;\n  return (\n    <div>\n      <ComponentDetailsRow>\n        <Col>\n          <Title level={5}>Frequency</Title>\n          <Text>This component is used: {timeUsed} times.</Text>\n        </Col>\n        <Divider />\n        <Col>\n          <Title level={5}>Path</Title>\n          <Text copyable>\n            <a href={`vscode://file/${nodeDetail.node.data.path}`}>\n              {nodeDetail.node.data.path}\n            </a>\n          </Text>\n        </Col>\n        <Divider />\n        <Col>\n          <Title level={5}>Code</Title>\n\n          <SyntaxHighlighter\n            style={vscDarkPlus}\n            showLineNumbers={true}\n            language=\"javascript\"\n          >\n            {nodeDetail.node.data.code}\n          </SyntaxHighlighter>\n        </Col>\n        <Divider />\n      </ComponentDetailsRow>\n    </div>\n  );\n};\n\nComponentDetails.propTypes = {\n  nodeDetail: PropTypes.any,\n};\n\nexport default ComponentDetails;\n","import { Collapse, Image } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nconst { Panel } = Collapse;\nimport React from 'react';\nimport { HelpPanelLabels } from '../../../utils/constants/constants';\n\nconst EdgesSection = () => {\n  return (\n    <>\n      <Paragraph>{HelpPanelLabels.edges.text}</Paragraph>\n\n      <Collapse defaultActiveKey={'default-edges'}>\n        <Panel\n          key={'default-edges'}\n          header={HelpPanelLabels.edges.default.header}\n        >\n          <Paragraph>{HelpPanelLabels.edges.default.text}</Paragraph>\n          <Image src={HelpPanelLabels.edges.default.img} />\n        </Panel>\n\n        <Panel key={''} header={HelpPanelLabels.edges.conditional.header}>\n          <Paragraph>{HelpPanelLabels.edges.conditional.text}</Paragraph>\n          <Image src={HelpPanelLabels.edges.conditional.img} />\n        </Panel>\n\n        <Panel key={''} header={HelpPanelLabels.edges.router.header}>\n          <Paragraph>{HelpPanelLabels.edges.router.text}</Paragraph>\n          <Image src={HelpPanelLabels.edges.router.img} />\n        </Panel>\n      </Collapse>\n    </>\n  );\n};\n\nexport default EdgesSection;\n","import { Divider } from 'antd';\nimport { Typography } from 'antd';\nconst { Link } = Typography;\nimport styled from 'styled-components';\nimport { baseUnit } from '../../utils/constants/units';\n\nexport const HelpPanelTreeWrapper = styled.div`\n  width: 600px;\n  height: 500px;\n  background-color: lightgrey;\n`;\n\nexport const VerticalDivider = styled(Divider)`\n  height: auto;\n  width: 1px;\n`;\n\nexport const CheckboxWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-left: 9px;\n`;\n\nexport const StyledLi = styled.li`\n  list-style-type: none;\n  margin-bottom: ${baseUnit / 2}px;\n`;\n\nexport const StyledUl = styled.ul`\n  padding: 0;\n`;\n","import {\n  GithubOutlined,\n  ReadOutlined,\n  YoutubeOutlined,\n} from '@ant-design/icons';\nimport React from 'react';\nimport { HelpPanelLabels } from '../../../utils/constants/constants';\nimport { StyledLi, StyledLink, StyledUl } from '../HelpPanel.sc';\n\nconst LinksSection = () => {\n  return (\n    <StyledUl>\n      <StyledLi>\n        <GithubOutlined />\n        <StyledLink href={HelpPanelLabels.links.repoUrl}>\n          {HelpPanelLabels.links.repo}\n        </StyledLink>\n      </StyledLi>\n\n      <StyledLi>\n        <ReadOutlined />\n        <StyledLink href={HelpPanelLabels.links.changelogUrl}>\n          {HelpPanelLabels.links.changeLog}\n        </StyledLink>\n      </StyledLi>\n\n      <StyledLi>\n        <YoutubeOutlined />\n        <StyledLink href={HelpPanelLabels.links.demoUrl}>\n          {HelpPanelLabels.links.demo}\n        </StyledLink>\n      </StyledLi>\n    </StyledUl>\n  );\n};\n\nexport default LinksSection;\n","import { Collapse, Image } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nconst { Panel } = Collapse;\nimport React from 'react';\nimport { HelpPanelLabels } from '../../../utils/constants/constants';\n\nconst NodesSection = () => {\n  return (\n    <>\n      <Paragraph>{HelpPanelLabels.nodes.text}</Paragraph>\n\n      <Collapse defaultActiveKey={'nodes-color'}>\n        <Panel key={'nodes-color'} header={HelpPanelLabels.nodes.color.header}>\n          <Paragraph>{HelpPanelLabels.nodes.color.text}</Paragraph>\n          <Image src={HelpPanelLabels.nodes.color.img} />\n        </Panel>\n\n        <Panel key={''} header={HelpPanelLabels.nodes.size.header}>\n          <Paragraph>{HelpPanelLabels.nodes.size.text}</Paragraph>\n          <Image src={HelpPanelLabels.nodes.size.img} />\n        </Panel>\n\n        <Panel key={''} header={HelpPanelLabels.nodes.white.header}>\n          <Paragraph>{HelpPanelLabels.nodes.white.text}</Paragraph>\n          <Image src={HelpPanelLabels.nodes.white.img} />\n        </Panel>\n      </Collapse>\n    </>\n  );\n};\n\nexport default NodesSection;\n","import React from 'react';\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\nimport { CheckboxWrapper, VerticalDivider } from '../HelpPanel.sc';\nimport { HelpPanelLabels } from '../../../utils/constants/constants';\nimport { PreferencesProps } from '../../../interfaces/component-interfaces';\n\nexport const PreferencesSection = ({\n  isHelpHiddenOnStartUp,\n  setIsHelpHiddenOnStartUp,\n  isVerticalTreeLayoutAsDefault,\n  setVerticalTreeLayoutAsDefault,\n}: PreferencesProps) => {\n  return (\n    <CheckboxWrapper>\n      <Checkbox\n        checked={isHelpHiddenOnStartUp}\n        onChange={(e) => setIsHelpHiddenOnStartUp(e.target.checked)}\n      >\n        {HelpPanelLabels.pref.help}\n      </Checkbox>\n      <VerticalDivider type=\"vertical\" />\n      <Checkbox\n        checked={isVerticalTreeLayoutAsDefault}\n        onChange={(e) => setVerticalTreeLayoutAsDefault(e.target.checked)}\n      >\n        {HelpPanelLabels.pref.tree}\n      </Checkbox>\n    </CheckboxWrapper>\n  );\n};\n\nexport default PreferencesSection;\n","import { Collapse, Drawer, Typography } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport React from 'react';\nimport { HelpPanelProps } from '../../interfaces/component-interfaces';\nimport { HelpPanelLabels } from '../../utils/constants/constants';\nimport EdgesSection from './private/EdgesSection';\nimport LinksSection from './private/LinksSection';\nimport NodesSection from './private/NodesSection';\nimport PreferencesSection from './private/PreferencesSection';\nconst { Title } = Typography;\nconst { Panel } = Collapse;\n\nconst HelpPanel = ({\n  isHelpVisible,\n  setIsHelpVisible,\n  isHelpHiddenOnStartUp,\n  setIsHelpHiddenOnStartUp,\n  isVerticalTreeLayoutAsDefault,\n  setVerticalTreeLayoutAsDefault,\n}: HelpPanelProps) => {\n  return (\n    <Drawer\n      width={720}\n      onClose={() => setIsHelpVisible(false)}\n      visible={isHelpVisible}\n      bodyStyle={{ paddingBottom: 80 }}\n    >\n      <Title level={3}>{HelpPanelLabels.title}</Title>\n      <Title level={5}>{HelpPanelLabels.thanks}</Title>\n      <Paragraph>{HelpPanelLabels.purpose}</Paragraph>\n\n      <Collapse defaultActiveKey={'preferences'}>\n        <Panel key={''} header={HelpPanelLabels.nodes.title}>\n          <NodesSection />\n        </Panel>\n\n        <Panel key={''} header={HelpPanelLabels.edges.title}>\n          <EdgesSection />\n        </Panel>\n\n        <Panel key={'preferences'} header={HelpPanelLabels.pref.title}>\n          <PreferencesSection\n            isHelpHiddenOnStartUp={isHelpHiddenOnStartUp}\n            setIsHelpHiddenOnStartUp={setIsHelpHiddenOnStartUp}\n            isVerticalTreeLayoutAsDefault={isVerticalTreeLayoutAsDefault}\n            setVerticalTreeLayoutAsDefault={setVerticalTreeLayoutAsDefault}\n          />\n        </Panel>\n\n        <Panel key={''} header={HelpPanelLabels.links.title}>\n          <LinksSection />\n        </Panel>\n      </Collapse>\n    </Drawer>\n  );\n};\n\nexport default HelpPanel;\n","// Would be nice to work on this file in the future, and\n// use the library instead of having this kind of duplication\n\nimport React from 'react';\nimport { CSSProperties } from 'react';\nimport cc from 'classcat';\n\ninterface MiniMapNodeProps {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  borderRadius: number;\n  className: string;\n  color: string;\n  shapeRendering: string;\n  strokeColor: string;\n  strokeWidth: number;\n  style?: CSSProperties;\n}\n\nconst MiniMapNode = ({\n  x,\n  y,\n  width,\n  height,\n  style,\n  color,\n  strokeColor,\n  strokeWidth,\n  className,\n  borderRadius,\n  shapeRendering,\n}: MiniMapNodeProps) => {\n  const { background, backgroundColor } = style || {};\n  const fill = String(color || background || backgroundColor);\n\n  return (\n    <rect\n      className={cc(['react-flow__minimap-node', className])}\n      x={x}\n      y={y}\n      rx={borderRadius}\n      ry={borderRadius}\n      width={width}\n      height={height}\n      fill={fill}\n      stroke={strokeColor}\n      strokeWidth={strokeWidth}\n      shapeRendering={shapeRendering}\n    />\n  );\n};\n\nMiniMapNode.displayName = 'MiniMapNode';\n\nexport default MiniMapNode;\n","// Would be nice to work on this file in the future, and\n// use the library instead of having this kind of duplication\n\nimport React from 'react';\nimport { HTMLAttributes, useCallback, useRef } from 'react';\nimport cc from 'classcat';\nimport {\n  Node,\n  Rect,\n  Box,\n  useStoreState,\n  getRectOfNodes,\n  useZoomPanHelper,\n} from 'react-flow-renderer';\nimport MiniMapNode from './MiniMapNode';\nimport {\n  createUseGesture,\n  UserHandlers,\n  wheelAction,\n  dragAction,\n} from '@use-gesture/react';\n\ntype StringFunc = (node: Node) => string;\n\nexport interface MiniMapProps extends HTMLAttributes<SVGSVGElement> {\n  nodeColor?: string | StringFunc;\n  nodeStrokeColor?: string | StringFunc;\n  nodeClassName?: string | StringFunc;\n  nodeBorderRadius?: number;\n  nodeStrokeWidth?: number;\n  maskColor?: string;\n}\n\nconst defaultWidth = 300;\nconst defaultHeight = 220;\n\nconst getBoundsOfBoxes = (box1: Box, box2: Box): Box => ({\n  x: Math.min(box1.x, box2.x),\n  y: Math.min(box1.y, box2.y),\n  x2: Math.max(box1.x2, box2.x2),\n  y2: Math.max(box1.y2, box2.y2),\n});\n\nconst rectToBox = ({ x, y, width, height }: Rect): Box => ({\n  x,\n  y,\n  x2: x + width,\n  y2: y + height,\n});\n\nconst boxToRect = ({ x, y, x2, y2 }: Box): Rect => ({\n  x,\n  y,\n  width: x2 - x,\n  height: y2 - y,\n});\n\nconst getBoundsofRects = (rect1: Rect, rect2: Rect): Rect =>\n  boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\n\nconst useGesture = createUseGesture([dragAction, wheelAction]);\n\nconst MiniMap = ({\n  style,\n  className,\n  nodeStrokeColor = '#555',\n  nodeColor = '#fff',\n  nodeClassName = '',\n  nodeBorderRadius = 5,\n  nodeStrokeWidth = 2,\n  maskColor = 'rgb(240, 242, 243, 0.5)',\n}: MiniMapProps) => {\n  const containerWidth = useStoreState((s) => s.width);\n  const containerHeight = useStoreState((s) => s.height);\n  const [tX, tY, tScale] = useStoreState((s) => s.transform);\n  const nodes = useStoreState((s) => s.nodes);\n\n  const mapClasses = cc(['react-flow__minimap', className]);\n  const elementWidth = Number(style?.width || defaultWidth);\n  const elementHeight = Number(style?.height || defaultHeight);\n  const nodeColorFunc =\n    nodeColor instanceof Function ? nodeColor : () => nodeColor;\n  const nodeStrokeColorFunc =\n    nodeStrokeColor instanceof Function\n      ? nodeStrokeColor\n      : () => nodeStrokeColor;\n  const nodeClassNameFunc =\n    nodeClassName instanceof Function ? nodeClassName : () => nodeClassName;\n  const hasNodes = nodes && nodes.length;\n  const bb = getRectOfNodes(nodes);\n  const viewBB: Rect = {\n    x: -tX / tScale,\n    y: -tY / tScale,\n    width: containerWidth / tScale,\n    height: containerHeight / tScale,\n  };\n  const boundingRect = hasNodes ? getBoundsofRects(bb, viewBB) : viewBB;\n  const scaledWidth = boundingRect.width / elementWidth;\n  const scaledHeight = boundingRect.height / elementHeight;\n  const viewScale = Math.max(scaledWidth, scaledHeight);\n  const viewWidth = viewScale * elementWidth;\n  const viewHeight = viewScale * elementHeight;\n  const offset = 5 * viewScale;\n  const x = boundingRect.x - (viewWidth - boundingRect.width) / 2 - offset;\n  const y = boundingRect.y - (viewHeight - boundingRect.height) / 2 - offset;\n  const width = viewWidth + offset * 2;\n  const height = viewHeight + offset * 2;\n  const shapeRendering =\n    typeof window === 'undefined' ? 'crispEdges' : 'geometricPrecision';\n\n  const minZoom = useStoreState((s) => s.minZoom);\n  const maxZoom = useStoreState((s) => s.maxZoom);\n\n  const rectRef = useRef<SVGRectElement>(null);\n\n  const { transform } = useZoomPanHelper();\n\n  const onDrag = useCallback<UserHandlers['onDrag']>(\n    ({ delta: [x, y] }) => {\n      transform({\n        x: tX + -x * tScale * scaledWidth,\n        y: tY + -y * tScale * scaledHeight,\n        zoom: tScale,\n      });\n    },\n    [scaledHeight, scaledWidth, tScale, tX, tY, transform]\n  );\n\n  const onWheel = useCallback<UserHandlers['onWheel']>(\n    ({ event: { clientX, clientY, deltaY }, active }) => {\n      if (!active) return;\n      const sign = Math.sign(deltaY);\n\n      const { x, y } = rectRef.current?.getBoundingClientRect() || {\n        x: clientX,\n        y: clientY,\n      };\n      const pX = clientX - x;\n      const pY = clientY - y;\n\n      const multiplier = sign === -1 ? 1.2 : sign === 1 ? 1 / 1.2 : 1;\n      const zoom = tScale * multiplier;\n      if (zoom > maxZoom || zoom < minZoom) return;\n      transform({\n        x: tX + sign * pX * zoom,\n        y: tY + sign * pY * zoom,\n        zoom,\n      });\n    },\n    [tScale, maxZoom, minZoom, transform, tX, tY]\n  );\n\n  const bind = useGesture({\n    onWheel,\n    onDrag,\n  });\n\n  return (\n    <svg\n      viewBox={`${x} ${y} ${width} ${height}`}\n      style={style}\n      className={mapClasses}\n    >\n      {nodes\n        .filter((node) => !node.isHidden)\n        .map((node) => (\n          <MiniMapNode\n            key={node.id}\n            x={node.__rf.position.x}\n            y={node.__rf.position.y}\n            width={node.__rf.width}\n            height={node.__rf.height}\n            style={node.style}\n            className={nodeClassNameFunc(node)}\n            color={nodeColorFunc(node)}\n            borderRadius={nodeBorderRadius}\n            strokeColor={nodeStrokeColorFunc(node)}\n            strokeWidth={nodeStrokeWidth}\n            shapeRendering={shapeRendering}\n          />\n        ))}\n      <rect\n        ref={rectRef}\n        className=\"react-flow__minimap-mask\"\n        x={viewBB.x}\n        y={viewBB.y}\n        width={viewBB.width}\n        height={viewBB.height}\n        fill={maskColor}\n        fillRule=\"evenodd\"\n        style={{\n          touchAction: 'none',\n        }}\n        {...bind()}\n      />\n    </svg>\n  );\n};\n\nMiniMap.displayName = 'MiniMap';\n\nexport default MiniMap;\n","import MiniMap from './MiniMap';\nimport styled from 'styled-components';\n\nimport { baseUnit } from '../../utils/constants/units';\n\nconst StyledMiniMap = styled(MiniMap)`\n  position: absolute;\n  width: 280px;\n  height: 205px;\n  right: ${baseUnit}px;\n  top: ${baseUnit}px;\n  border-radius: 15px;\n  border: 1px solid #001529;\n  opacity: 1;\n  -webkit-box-shadow: 4px 6px 11px -3px rgba(0, 0, 0, 0.84);\n  box-shadow: 4px 6px 11px -3px rgba(0, 0, 0, 0.84);\n`;\n\nexport default StyledMiniMap;\n","import { Select, TreeSelect } from 'antd';\nimport Sider from 'antd/lib/layout/Sider';\nimport MenuDivider from 'antd/lib/menu/MenuDivider';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport Title from 'antd/lib/typography/Title';\nimport styled, { css } from 'styled-components';\nimport { baseUnit } from '../../utils/constants/units';\n\nexport const NavigationSider = styled(Sider)`\n  overflow: auto;\n  height: 100vh;\n  position: fixed;\n  left: 0;\n`;\n\nexport const AppTitle = styled(Title)`\n  color: #fff !important;\n  padding-left: 24px;\n  margin-top: 24px;\n  margin-bottom: 0;\n`;\n\nexport const StyledSubMenu = styled(SubMenu)`\n  font-size: 16px;\n\n  .ant-menu-inline.ant-menu-sub {\n    background-color: hsl(209, 100%, 11%);\n  }\n\n  .ant-menu-submenu {\n    background-color: #001529;\n  }\n`;\n\nconst navigationDropdownStyles = css`\n  width: 100%;\n  padding: ${baseUnit}px ${baseUnit * 2}px;\n\n  .ant-select-arrow {\n    margin-right: ${baseUnit * 2}px;\n    cursor: pointer;\n    color: #001529;\n  }\n`;\n\nexport const DropdownInput = styled(Select)`\n  ${navigationDropdownStyles}\n`;\n\nexport const BaselineInputWrapper = styled.div`\n  ${navigationDropdownStyles}\n`;\n\nexport const TreeComponentDropdown = styled(TreeSelect)`\n  ${navigationDropdownStyles}\n`;\n\nexport const StyledDropDownSelect = {\n  maxHeight: 550,\n  maxWidth: 302,\n  minWidth: 'unset',\n  width: 302,\n  overflow: 'auto',\n};\n\nexport const StyledMenuDivider = styled(MenuDivider)`\n  margin: 0 ${baseUnit / 2}px !important;\n`;\n","import { Button } from 'antd';\nimport styled, { css } from 'styled-components';\nimport { baseUnit } from '../../../../utils/constants/units';\n\nconst navigationButtonsWrapperStyles = css`\n  display: flex;\n  flex-direction: column;\n  column-gap: 5px;\n`;\n\nexport const PrimaryActionsWrapper = styled.div`\n  ${navigationButtonsWrapperStyles};\n  padding: ${baseUnit}px ${baseUnit * 2}px;\n  flex-direction: row;\n  row-gap: 10px;\n  width: 100%;\n`;\n\nexport const GitHubActionsWrapper = styled.div`\n  ${navigationButtonsWrapperStyles};\n  padding: ${baseUnit}px ${baseUnit * 4}px;\n`;\n\nexport const ActionButton = styled(Button)`\n  width: 180px;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport { QuestionCircleOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\nimport { recompile } from '../../../../api';\nimport PropTypes from 'prop-types';\nimport { ActionButton, PrimaryActionsWrapper } from './ActionButtons.sc';\n\nexport const NavigationPrimaryActions = ({ setIsHelpVisible }) => {\n  const triggerRecompile = () => {\n    recompile()\n      .then(() => {\n        const hide = message.loading(\n          'Recompiling. Window will refresh soon..',\n          0\n        );\n        setTimeout(() => hide, 2000);\n        setTimeout(() => {\n          location.reload();\n        }, 4000);\n      })\n      .catch((error) => console.log('An error occurred ', error));\n  };\n\n  return (\n    <PrimaryActionsWrapper>\n      <ActionButton\n        type=\"primary\"\n        shape={'round'}\n        size=\"middle\"\n        icon={<ReloadOutlined />}\n        onClick={triggerRecompile}\n      >\n        Recompile Project\n      </ActionButton>\n\n      <ActionButton\n        type=\"primary\"\n        shape={'round'}\n        size=\"middle\"\n        icon={<QuestionCircleOutlined />}\n        onClick={() => setIsHelpVisible(true)}\n      >\n        Open help\n      </ActionButton>\n    </PrimaryActionsWrapper>\n  );\n};\n\nNavigationPrimaryActions.propTypes = {\n  setIsHelpVisible: PropTypes.any,\n};\n\nexport default NavigationPrimaryActions;\n","export const getParsedData = () => {\n  return fetch('http://localhost:4444/parsedData').then((res) => res.json());\n};\n\nexport const recompile = () => {\n  return fetch('http://localhost:4444/compile', {\n    method: 'POST',\n  });\n};\n","import React from 'react';\nimport { ActionButton, GitHubActionsWrapper } from './ActionButtons.sc';\n\nconst NavigationGitHubActions = () => {\n  return (\n    <GitHubActionsWrapper>\n      <ActionButton\n        target=\"_blank\"\n        href=\"https://github.com/react-bratus/react-bratus/issues/new?assignees=&labels=feedback&template=feedback.md&title=%5BFeedback%5D\"\n        ghost\n      >\n        Give feedback\n      </ActionButton>\n\n      <ActionButton\n        target=\"_blank\"\n        href=\"https://github.com/react-bratus/react-bratus/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D+\"\n        ghost\n      >\n        Submit bug\n      </ActionButton>\n\n      <ActionButton\n        target=\"_blank\"\n        href=\"https://github.com/react-bratus/react-bratus/issues/new?assignees=&labels=enhancement&template=feature_request.md&title=%5BFeature%5D\"\n        ghost\n      >\n        Suggest new feature\n      </ActionButton>\n    </GitHubActionsWrapper>\n  );\n};\n\nexport default NavigationGitHubActions;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useStoreState, useZoomPanHelper } from 'react-flow-renderer';\nimport HighlightedComponentsContext from '../../../../contexts/HighlightedComponentsContext';\nimport {\n  StyledDropDownSelect,\n  TreeComponentDropdown,\n} from '../../NavigationPanel.sc';\n\nconst NavSearchComponent = () => {\n  const { setCenter } = useZoomPanHelper();\n\n  const { highlightedComponents, setHighlightedComponents } = useContext(\n    HighlightedComponentsContext\n  );\n\n  const nodes = useStoreState((store) => store.nodes);\n\n  const [searchField, setSearchField] = useState();\n  const [searchOptions, setSearchOptions] = useState([]);\n\n  const focusNode = (id) => {\n    const index = nodes.findIndex((node) => node.id == id);\n    const node = nodes[index];\n    const x = node.__rf.position.x + node.__rf.width / 2;\n    const y = node.__rf.position.y + node.__rf.height / 2;\n    const zoom = 1;\n\n    setCenter(x, y, zoom);\n  };\n\n  const onChange = (value) => {\n    setSearchField(value);\n    const arr = value.split(':');\n    const componentName = arr[arr.length - 1];\n    const index = highlightedComponents.findIndex(\n      (component) => component.id === value\n    );\n    const array = [...highlightedComponents];\n    array.splice(index, 1);\n    setHighlightedComponents([\n      {\n        id: value,\n        componentName: componentName,\n        locked: true,\n        search: false,\n      },\n    ]);\n    focusNode(value);\n  };\n\n  const getParentId = (id) => {\n    const idSplit = id.split(':');\n    if (idSplit.length == 1) {\n      return null;\n    }\n    idSplit.pop();\n    return idSplit.join(':');\n  };\n\n  const isLeaf = (node) => {\n    return node.data.outDegree == 0;\n  };\n\n  const generateTreeNodes = () => {\n    if (nodes.length > 0) {\n      setSearchOptions(\n        nodes.map((node) => {\n          return {\n            id: node.id,\n            pId: getParentId(node.id),\n            title: node.data.label,\n            value: node.id,\n            isLeaf: isLeaf(node),\n          };\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    generateTreeNodes();\n  }, [nodes]);\n\n  return (\n    <TreeComponentDropdown\n      showSearch\n      value={searchField}\n      dropdownStyle={StyledDropDownSelect}\n      placeholder=\"Search components\"\n      onChange={onChange}\n      treeDataSimpleMode\n      treeDefaultExpandAll={false}\n      treeData={searchOptions}\n    />\n  );\n};\n\nexport default NavSearchComponent;\n","import { Select, Input } from 'antd';\nimport React, { useContext } from 'react';\nimport ComponentBackgroundContext from '../../../../contexts/ComponentBackgroundContext';\nimport {\n  BaselineInputWrapper,\n  DropdownInput,\n  StyledDropDownSelect,\n} from '../../NavigationPanel.sc';\n\nconst NavNodeVisualizationOptions = () => {\n  const { componentBackground, setComponentBackground } = useContext(\n    ComponentBackgroundContext\n  );\n\n  return (\n    <>\n      <DropdownInput\n        defaultValue={\n          !componentBackground.mode\n            ? 'proportional_size'\n            : componentBackground.mode\n        }\n        onChange={(value) =>\n          setComponentBackground({\n            ...componentBackground,\n            mode: value,\n          })\n        }\n        dropdownStyle={StyledDropDownSelect}\n      >\n        <Select.Option value=\"white\">White</Select.Option>\n\n        <Select.Option value=\"proportional_size\">\n          Proportional Size based on Lines\n        </Select.Option>\n\n        <Select.Option value=\"loc_reference\">\n          Colorization based on Lines\n        </Select.Option>\n      </DropdownInput>\n\n      {componentBackground.mode === 'loc_reference' && (\n        <BaselineInputWrapper>\n          <Input\n            addonBefore={'Baseline'}\n            placeholder={'LOC Reference'}\n            defaultValue={componentBackground.locReference}\n            onChange={(e) => {\n              if (e.target.value < 1) {\n                setComponentBackground({\n                  ...componentBackground,\n                  locReference: 1,\n                });\n              } else {\n                setComponentBackground({\n                  ...componentBackground,\n                  locReference: e.target.value,\n                });\n              }\n            }}\n            type=\"number\"\n            min=\"1\"\n          />\n        </BaselineInputWrapper>\n      )}\n    </>\n  );\n};\n\nexport default NavNodeVisualizationOptions;\n","import { Menu } from 'antd';\nimport React from 'react';\nimport { navigationWidth } from '../../utils/constants/units';\nimport {\n  AppTitle,\n  NavigationSider,\n  StyledMenuDivider,\n  StyledSubMenu,\n} from './NavigationPanel.sc';\nimport PropTypes from 'prop-types';\nimport {\n  BgColorsOutlined,\n  FileSearchOutlined,\n  GithubOutlined,\n  InteractionOutlined,\n} from '@ant-design/icons';\nimport NavigationPrimaryActions from './private/ActionButtons/NavigationPrimaryActions';\nimport NavigationGitHubActions from './private/ActionButtons/NavigationGitHubActions';\nimport NavSearchComponent from './private/SubMenuSections/NavSearchComponent';\nimport NavNodeVisualizationOptions from './private/SubMenuSections/NavNodeVisualizationOptions';\nimport { defaultOpenKeys } from '../../utils/constants/constants';\n\nconst NavigationPanel = ({ collapsed, setIsHelpVisible }) => {\n  return (\n    <>\n      <NavigationSider\n        collapsed={collapsed}\n        collapsedWidth={0}\n        width={navigationWidth}\n      >\n        <AppTitle level={1}>React-bratus</AppTitle>\n\n        <Menu theme=\"dark\" mode=\"inline\" defaultOpenKeys={defaultOpenKeys}>\n          <StyledSubMenu\n            key=\"search-component\"\n            title=\"Search for component\"\n            icon={<FileSearchOutlined />}\n          >\n            <NavSearchComponent />\n          </StyledSubMenu>\n\n          <StyledMenuDivider />\n\n          <StyledSubMenu\n            key=\"node-visualization\"\n            title=\"Node visualization options\"\n            icon={<BgColorsOutlined />}\n          >\n            <NavNodeVisualizationOptions />\n          </StyledSubMenu>\n\n          <StyledMenuDivider />\n\n          <StyledSubMenu\n            key=\"navigation-actions\"\n            title=\"Actions\"\n            icon={<InteractionOutlined />}\n          >\n            <NavigationPrimaryActions setIsHelpVisible={setIsHelpVisible} />\n            <StyledSubMenu\n              key=\"github-actions\"\n              title=\"Contribute\"\n              icon={<GithubOutlined />}\n            >\n              <NavigationGitHubActions />\n            </StyledSubMenu>\n          </StyledSubMenu>\n        </Menu>\n      </NavigationSider>\n    </>\n  );\n};\n\nNavigationPanel.propTypes = {\n  collapsed: PropTypes.any,\n  setIsHelpVisible: PropTypes.any,\n};\n\nexport default NavigationPanel;\n","import { Button, Layout } from 'antd';\nimport styled from 'styled-components';\n\nimport { baseUnit, navigationWidth } from '../../utils/constants/units';\n\nexport const MainContentWrapper = styled(Layout)`\n  margin-left: ${({ collapsed }) =>\n    collapsed === false ? `${navigationWidth}px` : '0'};\n  padding: 1rem;\n  height: 100vh;\n  background-color: rgb(240 242 245 / 33%);\n`;\n\nexport const NavigationTriggerButton = styled(Button)`\n  position: absolute;\n  bottom: ${baseUnit * 2}px;\n  left: ${({ collapsed }) =>\n    collapsed === true\n      ? `${baseUnit * 2}px`\n      : `${navigationWidth + baseUnit * 2}px`};\n  z-index: 999;\n`;\n\nexport const MinimapTriggerButton = styled(Button)`\n  position: absolute;\n  top: ${({ isMinimapVisible }) =>\n    isMinimapVisible === true ? `${baseUnit * 19.2}px` : `${baseUnit}px`};\n  right: ${baseUnit}px;\n  z-index: 999;\n`;\n","import { LeftCircleOutlined } from '@ant-design/icons';\nimport ColorHash from 'color-hash';\n\nimport { Drawer as ComponentDetailsDrawer, Layout } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useState, useContext } from 'react';\nimport { ReactFlowProvider } from 'react-flow-renderer';\nimport useStickyState from '../../hooks/useStickyState';\nimport ComponentDetails from '../ComponentDetails/ComponentDetails';\nimport HelpPanel from '../HelpPanel/HelpPanel';\nimport StyledMiniMap from '../Minimap/Minimap.sc';\nimport NavigationPanel from '../NavigationPanel/NavigationPanel';\nimport {\n  MainContentWrapper,\n  MinimapTriggerButton,\n  NavigationTriggerButton,\n} from './DefaultLayout.sc';\nimport HighlightedComponentsContext from '../../contexts/HighlightedComponentsContext';\n\nconst DefaultLayout = ({\n  children,\n  info,\n  nodeDetail,\n  setNodeDetail,\n  isVerticalTreeLayoutAsDefault,\n  setVerticalTreeLayoutAsDefault,\n}) => {\n  const [isHelpHiddenOnStartUp, setIsHelpHiddenOnStartUp] = useStickyState(\n    false,\n    'react-bratus:hide-help'\n  );\n  const { highlightedComponents } = useContext(HighlightedComponentsContext);\n  const [isHelpVisible, setIsHelpVisible] = useState(\n    !isHelpHiddenOnStartUp ? true : false\n  );\n  const [collapsed, setCollapsed] = useState(false);\n  const [isMinimapVisible, setisMinimapVisible] = useState(true);\n\n  const isMinimapNodeHighlighted = (node) => {\n    return highlightedComponents.some((component) =>\n      node.id.match(\n        `${component.componentName}:+.+|${component.componentName}$`\n      )\n    );\n  };\n\n  const defineMinimapNodeColor = (node) => {\n    if (isMinimapNodeHighlighted(node)) {\n      return new ColorHash({\n        lightness: 0.4,\n        hue: { min: 0, max: 366 },\n      }).hex(node.data.label);\n    } else {\n      return new ColorHash({\n        lightness: 0.7,\n        hue: { min: 0, max: 366 },\n      }).hex(node.data.label);\n    }\n  };\n\n  return (\n    <Layout>\n      <ReactFlowProvider>\n        <NavigationPanel\n          setIsHelpVisible={setIsHelpVisible}\n          setCollapsed={setCollapsed}\n          collapsed={collapsed}\n          info={info}\n        />\n\n        <NavigationTriggerButton\n          collapsed={collapsed}\n          icon={<LeftCircleOutlined rotate={collapsed && 180} />}\n          type=\"primary\"\n          shape=\"round\"\n          size=\"middle\"\n          onClick={() => {\n            setCollapsed(!collapsed);\n          }}\n        >\n          {collapsed ? <span>Show Nav</span> : <span>Hide Nav</span>}\n        </NavigationTriggerButton>\n\n        <MainContentWrapper collapsed={collapsed}>\n          {children}\n        </MainContentWrapper>\n\n        <ComponentDetailsDrawer\n          width={800}\n          visible={nodeDetail.visible}\n          closable={true}\n          keyboard\n          onClose={() => setNodeDetail({ visible: false, node: null })}\n          title={nodeDetail.node ? nodeDetail.node.data.label : ''}\n        >\n          <ComponentDetails nodeDetail={nodeDetail} />\n        </ComponentDetailsDrawer>\n\n        <MinimapTriggerButton\n          isMinimapVisible={isMinimapVisible}\n          icon={<LeftCircleOutlined rotate={isMinimapVisible && 180} />}\n          type=\"primary\"\n          shape=\"round\"\n          size=\"middle\"\n          onClick={() => {\n            setisMinimapVisible(!isMinimapVisible);\n          }}\n        >\n          {isMinimapVisible ? <span>Hide Map</span> : <span>Show Map</span>}\n        </MinimapTriggerButton>\n        {isMinimapVisible && (\n          <StyledMiniMap nodeColor={defineMinimapNodeColor} />\n        )}\n      </ReactFlowProvider>\n\n      <ReactFlowProvider>\n        <HelpPanel\n          isVerticalTreeLayoutAsDefault={isVerticalTreeLayoutAsDefault}\n          setVerticalTreeLayoutAsDefault={setVerticalTreeLayoutAsDefault}\n          isHelpVisible={isHelpVisible}\n          setIsHelpVisible={setIsHelpVisible}\n          isHelpHiddenOnStartUp={isHelpHiddenOnStartUp}\n          setIsHelpHiddenOnStartUp={setIsHelpHiddenOnStartUp}\n        />\n      </ReactFlowProvider>\n    </Layout>\n  );\n};\n\nDefaultLayout.propTypes = {\n  isVerticalTreeLayoutAsDefault: PropTypes.any,\n  setVerticalTreeLayoutAsDefault: PropTypes.any,\n  info: PropTypes.any,\n  nodeDetail: PropTypes.any,\n  setNodeDetail: PropTypes.func,\n};\nexport default DefaultLayout;\n","import { i18n } from '@lingui/core';\n\nexport const getUserLocale = () => {\n  // Returns \"en-GB\"\n  const languageCode =\n    (navigator.languages && navigator.languages[0]) ||\n    navigator.language ||\n    navigator.userLanguage;\n\n  // language-code = primary-code ( \"-\" subcode )*\n  // Subcode is usually the Country Code\n  const langPrimaryCode = languageCode.split('-')[0];\n\n  const defaultEnLanguageFallback =\n    langPrimaryCode !== 'da' || langPrimaryCode !== 'en'\n      ? 'en'\n      : langPrimaryCode;\n\n  return defaultEnLanguageFallback;\n};\n\nexport async function activate(locale) {\n  const { messages } = await import(`../../locales/${locale}/messages.js`);\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n}\n","import { useState } from 'react';\n\nimport { getUserLocale } from '../utils/functions';\n\nconst LOCAL_STORAGE_KEY = 'react-bratus:settings:locale';\n\nconst useLocale = () => {\n  const [locale, setLocale] = useState(\n    localStorage.getItem(LOCAL_STORAGE_KEY) ?? getUserLocale()\n  );\n\n  const updateLocale = (value) => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, value);\n    setLocale(value);\n  };\n\n  return { locale, updateLocale };\n};\n\nexport default useLocale;\n","import React, { useState } from 'react';\n\nimport HighlightedComponentsContext from '../contexts/HighlightedComponentsContext';\n\nconst HighlightedComponentsProvider = ({ children }) => {\n  const [highlightedComponents, setHighlightedComponents] = useState([]);\n\n  return (\n    <HighlightedComponentsContext.Provider\n      value={{ highlightedComponents, setHighlightedComponents }}\n    >\n      {children}\n    </HighlightedComponentsContext.Provider>\n  );\n};\n\nexport default HighlightedComponentsProvider;\n","import { i18n } from '@lingui/core';\nimport { useLingui } from '@lingui/react';\nimport { da, en } from 'make-plural/plurals';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\ni18n.loadLocaleData('en', { plurals: en });\ni18n.loadLocaleData('da', { plurals: da });\n\nconst I18nWatchLocaleProvider = ({ children }) => {\n  const { i18n } = useLingui();\n\n  // Skip render when locale isn't loaded\n  if (!i18n.locale) return null;\n\n  // Force re-render when locale changes. Otherwise translations won't be updated.\n  return <>{children}</>;\n};\n\nI18nWatchLocaleProvider.propTypes = {\n  children: PropTypes.any,\n};\n\nexport default I18nWatchLocaleProvider;\n","import React from 'react';\nimport {\n  createGlobalStyle,\n  ThemeProvider as StyledThemeProvider,\n} from 'styled-components';\nconst THEME = {\n  primary: '#00D8FF',\n  secondary: '#001529',\n};\nconst GlobalStyle = createGlobalStyle`\n.ant-select-tree .ant-select-tree-treenode:not(.ant-select-tree .ant-select-tree-treenode-disabled).filter-node .ant-select-tree-title {\n  background-color: red;\n  color: white;\n}\n`;\n\nconst ThemeProvider = ({ children }) => {\n  return (\n    <StyledThemeProvider theme={THEME}>\n      <GlobalStyle />\n      {children}\n    </StyledThemeProvider>\n  );\n};\n\nexport default ThemeProvider;\n","import 'antd/dist/antd.css';\nimport { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport { Alert, Spin } from 'antd';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { getParsedData } from './api';\nimport ComponentTree from './components/ComponentTree/ComponentTree';\nimport DefaultLayout from './components/DefaultLayoutPage/DefaultLayout';\nimport useLocale from './hooks/useLocale';\nimport HighlightedComponentsProvider from './providers/HighlightedComponentsProvider';\nimport I18nWatchLocaleProvider from './providers/I18nWatchLocaleProvider';\nimport ThemeProvider from './providers/ThemeProvider';\nimport { activate } from './utils/functions';\nimport { getEdges, getNodes } from './utils/functions/nodes-and-edges';\nimport { getLayoutedGraphElements } from './utils/functions/graphUtils';\nimport { GraphLabels } from './utils/constants/constants';\nimport ComponentBackgroundContext from './contexts/ComponentBackgroundContext';\nimport useStickyState from './hooks/useStickyState';\n\nconst App = () => {\n  const { locale } = useLocale();\n  const [nodesAndEdges, setNodesAndEdges] = useState(null);\n  const [nodeDetail, setNodeDetail] = useState({ visible: false, node: null });\n  const [info, setInfo] = useState(null);\n  const { componentBackground } = useContext(ComponentBackgroundContext);\n\n  const [treeLayoutDirection, setTreeLayoutDirection] = useState(undefined);\n\n  //  If the user prefers the vertical layout as favorite, he/she can click it as preferred\n  // in the help panel. The App.js getLayoutedGraphElement() will check the local storage,\n  //  otherwise it will set horizontal as the default.\n  const [isVerticalTreeLayoutAsDefault, setVerticalTreeLayoutAsDefault] =\n    useStickyState(false, 'bratus:prefer-vertical-layout');\n\n  const treeLayoutOnCompile =\n    isVerticalTreeLayoutAsDefault === true\n      ? GraphLabels.leftToRight\n      : GraphLabels.topToBottom;\n\n  useEffect(() => {\n    activate(locale);\n    /**\n     * @param data is a set of nodes and edges: {nodes: Array, edges: Array}\n     */\n    getParsedData()\n      .then((data) => {\n        setInfo(data.info);\n        const nodes = getNodes(data, setNodeDetail);\n        const edges = getEdges(data);\n        let tree = [];\n\n        setNodesAndEdges(\n          getLayoutedGraphElements(\n            tree.concat(nodes, edges),\n            treeLayoutOnCompile,\n            setTreeLayoutDirection,\n            componentBackground\n          )\n        );\n      })\n      .catch(console.log);\n  }, [locale]);\n\n  return (\n    <I18nProvider i18n={i18n}>\n      <I18nWatchLocaleProvider>\n        <ThemeProvider>\n          <HighlightedComponentsProvider>\n            <DefaultLayout\n              info={info}\n              nodeDetail={nodeDetail}\n              setNodeDetail={setNodeDetail}\n              isVerticalTreeLayoutAsDefault={isVerticalTreeLayoutAsDefault}\n              setVerticalTreeLayoutAsDefault={setVerticalTreeLayoutAsDefault}\n            >\n              {nodesAndEdges ? (\n                <ComponentTree\n                  treeLayoutDirection={treeLayoutDirection}\n                  nodesAndEdges={nodesAndEdges}\n                  setTreeLayoutDirection={setTreeLayoutDirection}\n                />\n              ) : (\n                <Spin spinning={true}>\n                  <Alert\n                    message=\"Nothing to show\"\n                    description=\"Could not find any components to display\"\n                    type=\"warning\"\n                  />\n                </Spin>\n              )}\n            </DefaultLayout>\n          </HighlightedComponentsProvider>\n        </ThemeProvider>\n      </I18nWatchLocaleProvider>\n    </I18nProvider>\n  );\n};\n\nexport default App;\n","export const getNodes = (data, setNodeDetail) => {\n  const nodes = data.nodes.map((node) => {\n    return {\n      ...node,\n      data: {\n        ...node.data,\n        onShowNodeDetail: (node) =>\n          setNodeDetail({ visible: true, node: node }),\n      },\n    };\n  });\n\n  return nodes;\n};\n\nexport const getEdges = (data) => {\n  const edges = data.edges.map((edge) => {\n    return {\n      ...edge,\n      labelBgPadding: [8, 4],\n      labelBgBorderRadius: 4,\n      labelBgStyle: {\n        fill: '#001529',\n        fillOpacity: 0.7,\n      },\n      labelStyle: {\n        fill: '#fff',\n      },\n      style: {\n        stroke: edge.conditional ? '#348888' : edge.label ? '#FA7F08' : '#000',\n        strokeWidth: '2px',\n      },\n    };\n  });\n\n  return edges;\n};\n","import React from 'react';\nimport ComponentBackgroundContext from '../contexts/ComponentBackgroundContext';\nimport useStickyState from '../hooks/useStickyState';\n\nconst ComponentBackgroundProvider = ({ children }) => {\n  const [componentBackground, setComponentBackground] = useStickyState(\n    {\n      mode: 'white',\n      locReference: 300,\n    },\n    'componentBackground'\n  );\n\n  return (\n    <ComponentBackgroundContext.Provider\n      value={{ componentBackground, setComponentBackground }}\n    >\n      {children}\n    </ComponentBackgroundContext.Provider>\n  );\n};\n\nexport default ComponentBackgroundProvider;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ComponentBackgroundProvider from './providers/ComponentBackgroundProvider';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ComponentBackgroundProvider>\n      <App />\n    </ComponentBackgroundProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}